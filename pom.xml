<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <prerequisites>
    <maven>2.2.1</maven>
  </prerequisites>

  <groupId>io.seqware</groupId>
  <!-- MAKE SURE YOU UPDATE THE workflow.properties FILE TOO -->
  <artifactId>SangerPancancerCgpCnIndelSnvStr</artifactId>
  <!-- MAKE SURE YOU UPDATE THE workflow.properties FILE TOO -->
  <version>1.0.7</version>
  <packaging>jar</packaging>
  <!-- MAKE SURE YOU UPDATE THE workflow.properties FILE TOO -->
  <name>SangerPancancerCgpCnIndelSnvStr</name>
  <url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<seqware-version>1.1.0</seqware-version>
		<skipITs>true</skipITs>
		<workflow-full-name>Workflow_Bundle_SangerPancancerCgpCnIndelSnvStr_${workflow-version}_SeqWare_${seqware-version}</workflow-full-name>
		<workflow-dir>${project.build.directory}/${workflow-full-name}/Workflow_Bundle_SangerPancancerCgpCnIndelSnvStr/${workflow-version}</workflow-dir>
		<version.template.file>src/main/java/io/seqware/pancancer/Version.java.template</version.template.file>
		<version.file>src/main/java/io/seqware/pancancer/Version.java</version.file>
		<gt-download-upload-wrapper.version>2.0.10</gt-download-upload-wrapper.version>
		<vcf-uploader.version>2.0.4</vcf-uploader.version>
	</properties>

	<dependencies>
		<dependency>
		    <groupId>vcf-uploader</groupId>
		    <artifactId>vcf-uploader</artifactId>
		    <version>${vcf-uploader.version}</version>
		    <type>zip</type>
		</dependency>
		<dependency>
			<groupId>io.seqware</groupId>
			<artifactId>seqware-bin-linux-x86-64-jre-7.0.51</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>com.github.seqware</groupId>
			<artifactId>seqware-distribution</artifactId>
			<version>${seqware-version}</version>
			<classifier>full</classifier>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>SeqWare-CGP-SomaticCore</groupId>
			<artifactId>SeqWare-CGP-SomaticCore_opt</artifactId>
			<version>1.3.0</version>
			<type>tar.gz</type>
		</dependency>
		<dependency>
			<groupId>gt-download-upload-wrapper</groupId>
			<artifactId>gt-download-upload-wrapper</artifactId>
			<version>${gt-download-upload-wrapper.version}</version>
			<type>zip</type>
		</dependency>
	</dependencies>

  <repositories>
    <repository>
      <id>com.github.seqware</id>
      <name>SeqWare Maven Repository</name>
      <url>http://seqwaremaven.oicr.on.ca/artifactory/seqware-release</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>snapshot.com.github.seqware</id>
      <name>SeqWare Snapshot Maven Repository</name>
      <url>http://seqwaremaven.oicr.on.ca/artifactory/seqware-snapshot</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>dependencies.com.github.seqware</id>
      <name>SeqWare Dependencies Maven Repository</name>
      <url>http://seqwaremaven.oicr.on.ca/artifactory/seqware-dependencies</url>
    </repository>
  </repositories>

  <build>

    <filters>
      <filter>workflow.properties</filter>
    </filters>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
      </plugin>

      <plugin>
        <groupId>com.google.code.maven-replacer-plugin</groupId>
        <artifactId>maven-replacer-plugin</artifactId>
        <version>1.4.0</version>
        <executions>
          <execution>
            <phase>process-sources</phase>
            <goals>
              <goal>replace</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <file>${version.template.file}</file>
          <outputFile>${version.file}</outputFile>
          <replacements>
            <replacement>
              <token>@seqware-version@</token>
              <value>${seqware-version}</value>
            </replacement>
            <replacement>
              <token>@workflow-name@</token>
              <value>${workflow-name}</value>
            </replacement>
            <replacement>
              <token>@workflow-version@</token>
              <value>${project.version}</value>
            </replacement>
            <replacement>
              <token>@workflow-short-name-version@</token>
              <value>${workflow-short-name-version}</value>
            </replacement>
            <replacement>
              <token>@workflow-url@</token>
              <value>${workflow-url}</value>
            </replacement>
            <replacement>
              <token>@workflow-src-url@</token>
              <value>${workflow-src-url}</value>
            </replacement>
          </replacements>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
        <version>1.0-alpha-2</version>
        <executions>
          <execution>
            <id>properties-maven-plugin-execution</id>
            <phase>validate</phase>
            <goals>
              <goal>read-project-properties</goal>
            </goals>
            <configuration>
              <files>
                <file>workflow.properties</file>
              </files>
            </configuration>
          </execution>
        </executions>
      </plugin>

			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.7</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<!-- here the phase you need -->
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${workflow-dir}</outputDirectory>
							<!-- see the explanation for this mutually exclusive syntax at http://maven.apache.org/plugins/maven-resources-plugin/examples/filter.html -->
							<resources>
								<resource>
									<directory>workflow</directory>
									<includes>
										<include>metadata.xml</include>
										<include>config/*.ini</include>
										<include>workflows/workflow.ftl</include>
									</includes>
									<filtering>true</filtering>
								</resource>
								<resource>
									<directory>workflow</directory>
									<excludes>
										<exclude>metadata.xml</exclude>
										<exclude>config/*.ini</exclude>
										<exclude>workflows/workflow.ftl</exclude>
									</excludes>
									<filtering>false</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<!-- This execution will copy the gt-download-upload wrapper from the unpacked dependency to the correct path in the output directory. -->
					<execution>
						<id>copy-gt-download-upload-wrapper-files</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${workflow-dir}/lib/GNOS</outputDirectory>
							<resources>
								<resource>
									<directory>${workflow-dir}/bin/gt-download-upload-wrapper-${gt-download-upload-wrapper.version}/lib/GNOS</directory>
									<includes>
										<include>*.pm</include>
									</includes>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<!-- This execution will copy the vcf-uploader scripts from the unpacked dependency to the correct path in the output directory. -->
					<execution>
						<id>copy-vcf-uploader-files</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${workflow-dir}/bin</outputDirectory>
							<resources>
								<resource>
									<directory>${workflow-dir}/bin/vcf-uploader-${vcf-uploader.version}</directory>
									<includes>
										<include>*.pl</include>
										<include>*.py</include>
										<include>*.sh</include>
										<include>synapse_upload_vcf</include>
									</includes>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-classes</id>
						<!-- here the phase you need -->
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${workflow-dir}/classes</outputDirectory>
							<resources>
								<resource>
									<directory>${project.build.directory}/classes</directory>
									<includes>
										<include> **/*</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.10</version>
				<executions>
					<execution>
						<id>unpack-gt-download-upload-wrapper-scripts</id>
						<phase>process-sources</phase>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
						<configuration>
							<includeArtifactIds>gt-download-upload-wrapper</includeArtifactIds>
							<outputDirectory>${workflow-dir}/bin</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>unpack-vcf-uploader</id>
						<phase>process-sources</phase>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
						<configuration>
							<includeArtifactIds>vcf-uploader</includeArtifactIds>
							<outputDirectory>${workflow-dir}/bin</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>copy</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>com.github.seqware</groupId>
									<artifactId>seqware-distribution</artifactId>
									<version>${seqware-version}</version>
									<classifier>full</classifier>
									<overWrite>true</overWrite>
									<outputDirectory>${workflow-dir}/lib</outputDirectory>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
					<execution>
						<id>unpack-dependencies</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${workflow-dir}/bin</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
							<excludeScope>provided</excludeScope>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.2.1</version>
				<executions>
					<execution>
						<id>recursive_executable</id>
						<phase>package</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>chmod</executable>
							<commandlineArgs>-R 755 ${workflow-dir}/bin</commandlineArgs>
						</configuration>
					</execution>
					<execution>
						<id>test_bundle</id>
						<phase>integration-test</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<skip>${skipITs}</skip>
							<executable>${workflow-dir}/bin/jre1.6.0_29/bin/java</executable>
							<commandlineArgs>-jar ${workflow-dir}/lib/seqware-distribution-${seqware-version}-full.jar --plugin net.sourceforge.seqware.pipeline.plugins.BundleManager -- -t -b ${project.build.directory}/${workflow-full-name}/ </commandlineArgs>
						</configuration>
					</execution>
					<execution>
						<id>download_data</id>
						<phase>package</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>perl</executable>
							<commandlineArgs>${basedir}/workflow/scripts/download_ref.pl ${basedir}/links</commandlineArgs>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.4.1</version>
				<configuration>
					<filesets>
						<fileset>
							<directory>bin</directory>
							<includes>
								<include>**/*</include>
							</includes>
							<followSymlinks>false</followSymlinks>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.pyx4j</groupId>
				<artifactId>maven-junction-plugin</artifactId>
				<version>1.0.3</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>link</goal>
						</goals>
					</execution>
					<execution>
						<id>unlink</id>
						<phase>clean</phase>
						<goals>
							<goal>unlink</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<links>
						<link>
							<dst>${workflow-dir}/data</dst>
							<src>${basedir}/links</src>
						</link>
					</links>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
